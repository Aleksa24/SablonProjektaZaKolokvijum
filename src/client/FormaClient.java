/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package client;

import domain.Korisnik;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.Socket;
import java.util.HashMap;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import transfer.RequestObject;
import transfer.ResponseObject;
import util.Operation;
import util.ResponseStatus;

/**
 *
 * @author Aleksa
 */
public class FormaClient extends javax.swing.JFrame {
    
    private Socket socket;
    private ObjectOutputStream objectOutputStream;
    private ObjectInputStream objectInputStream;
    private Korisnik ulogovanKorisnik;

    /**
     * Creates new form Forma
     */
    public FormaClient() {
        initComponents();
        prepareForm();
        connectToServer();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtKorisnickoIme = new javax.swing.JTextField();
        btnLogin = new javax.swing.JButton();
        panel = new javax.swing.JPanel();
        btnLogout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Korisnicko ime:");

        btnLogin.setText("login");
        btnLogin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLoginActionPerformed(evt);
            }
        });

        panel.setBorder(javax.swing.BorderFactory.createTitledBorder("panel"));

        javax.swing.GroupLayout panelLayout = new javax.swing.GroupLayout(panel);
        panel.setLayout(panelLayout);
        panelLayout.setHorizontalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 580, Short.MAX_VALUE)
        );
        panelLayout.setVerticalGroup(
            panelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 272, Short.MAX_VALUE)
        );

        btnLogout.setText("logout");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtKorisnickoIme, javax.swing.GroupLayout.PREFERRED_SIZE, 152, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnLogin, javax.swing.GroupLayout.PREFERRED_SIZE, 154, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btnLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 149, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(92, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtKorisnickoIme, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnLogin)
                    .addComponent(btnLogout))
                .addGap(83, 83, 83)
                .addComponent(panel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(12, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnLoginActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLoginActionPerformed
        
        try {
            login(txtKorisnickoIme.getText().trim());
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormaClient.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FormaClient.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_btnLoginActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        try {
            logout();
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(FormaClient.class.getName()).log(Level.SEVERE, null, ex);
        } catch (Exception ex) {
            Logger.getLogger(FormaClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnLogoutActionPerformed

    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FormaClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FormaClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FormaClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FormaClient.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FormaClient().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnLogin;
    private javax.swing.JButton btnLogout;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel panel;
    private javax.swing.JTextField txtKorisnickoIme;
    // End of variables declaration//GEN-END:variables

    private void prepareForm() {
        panel.setVisible(false);
        btnLogin.setEnabled(true);
        btnLogout.setEnabled(false);
    }

    private void connectToServer() {
        try {
            socket=new Socket("localhost", 9000);
            objectOutputStream=new ObjectOutputStream(socket.getOutputStream());
            objectInputStream=new ObjectInputStream(socket.getInputStream());
        } catch (IOException ex) {
            System.out.println("server nije startovan!!!!!!!!!!");
            Logger.getLogger(FormaClient.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    public void login(String korisnickoIme) throws IOException, ClassNotFoundException, Exception {
        RequestObject requestObject=new RequestObject();
        requestObject.setOperation(Operation.OPERATION_LOGIN);
        Map<String, String> userMap = new HashMap<>();
        userMap.put("korisnickoIme", korisnickoIme);
//        ubacuje se u mapu po potrebi kada se loguje-----------------------raditi nesto
//        userMap.put("", );
//        userMap.put("", );
        requestObject.setData(userMap);
        
        objectOutputStream.writeObject(requestObject);
        objectOutputStream.flush();
        //waiting response
        System.out.println("poslat zahtev za logovanje");
        ResponseObject responseObject=(ResponseObject) objectInputStream.readObject();
        System.out.println("primljen odgovor za logovanje");
        ResponseStatus status=responseObject.getStatus();
        System.out.println(status);
        if(status==ResponseStatus.SUCCESS){
            Map<String,Object> primljenaMapa = (Map<String,Object>) responseObject.getData();
            ulogovanKorisnik = (Korisnik) primljenaMapa.get("korisnik");
            
            
            //primljenaMapa.get("");--------------------------raditi nesto!!!
            //radi nesto sa primljenom mapom
            pripremiFormuZaUlogovanogKorisnika();
            
        }else{
            System.out.println("neka greska na serveru,vrv oko uslova zadatka!");
            JOptionPane.showMessageDialog(this, responseObject.getErrorMessage());
            throw new Exception(responseObject.getErrorMessage());
        }
    }

    private void pripremiFormuZaUlogovanogKorisnika() {
        panel.setVisible(true);
        btnLogin.setEnabled(false);
        btnLogout.setEnabled(true);
    }

    private void logout() throws IOException, ClassNotFoundException, Exception {
        RequestObject requestObject=new RequestObject();
        requestObject.setOperation(Operation.OPERATION_LOGOUT);
        requestObject.setData(ulogovanKorisnik);
        
        objectOutputStream.writeObject(requestObject);
        objectOutputStream.flush();
        System.out.println("poslat zahtev za logOUT");
        
        //waiting response
        ResponseObject responseObject=(ResponseObject) objectInputStream.readObject();
        System.out.println("primljen odgovor za logOUT");
        
        ResponseStatus status=responseObject.getStatus();
        System.out.println(status);
        if(status==ResponseStatus.SUCCESS){
            System.out.println("odlogovan korisnik");
            prepareForm();
        }else{
            System.out.println("neka greska na serveru,vrv oko uslova zadatka!");
            System.out.println(responseObject.getErrorMessage());
            throw new Exception(responseObject.getErrorMessage());
        }
    }
}
